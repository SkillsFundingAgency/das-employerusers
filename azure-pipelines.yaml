trigger:
  batch: true
  branches:
    include:
      - "*"

pr: none

workspace:
  clean: all

variables:
  - group: 'Prod Management Resources'
  - name: buildConfiguration
    value: 'release'
  - name: buildPlatform
    value: 'any cpu'  
  - name: GitVersion.AssemblySemFileVer
    value: ''

pool:
  name: 'DAS - Continuous Integration'
  demands: Agent.OS -equals Windows_NT

resources:
  repositories:
  - repository: das-platform-building-blocks
    type: github
    name: SkillsFundingAgency/das-platform-building-blocks
    ref: refs/heads/master
    endpoint: "GitHub (SFA)"

steps:
- task: UseGitVersion@5
  inputs:
    versionSpec: 5.x
    useConfigFile: true
    configFilePath: GitVersion.yml

- template: azure-pipelines-templates/dependency-check.yml@das-platform-building-blocks
  
- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.3.0'
  inputs:
    versionSpec: 4.x

- task: NuGetCommand@2
  displayName: 'NuGet Restore SFA.DAS.EmployerUsers.sln and SFA.DAS.EmployerUsers.Support.sln'
  inputs:
    restoreSolution: 'src/SFA.DAS.EmployerUsers*.sln'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore all'
  inputs:
    command: restore
    projects: "src/**/*.csproj"

- task: VSBuild@1
  displayName: 'Build SFA.DAS.EmployerUsers.sln and SFA.DAS.EmployerUsers.Support.sln'
  inputs:
    solution: 'src/SFA.DAS.EmployerUsers*.sln'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    clean: true

- task: VSTest@2
  displayName: 'Run NUnit Tests'
  inputs:
    testAssemblyVer2: |
      **/bin/Release/*UnitTests.dll
      **/bin/Release/*/*UnitTests.dll
      !**/*ClientV2.UnitTests.dll
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'    

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: src
    Contents: |
     azure/**
     **/*.dacpac
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Publish'
  inputs:
    ArtifactName: Publish