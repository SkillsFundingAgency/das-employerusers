@model SFA.DAS.EmployerUsers.Web.Models.OrchestratorResponse<SFA.DAS.EmployerUsers.Web.Models.PasswordResetViewModel>
@{
    ViewBag.PageID = "page-reset-password";
    ViewBag.Title = "Enter your reset code";
    ViewBag.HideSigninLink = true;
    ViewBag.HideCookieMessage = true;
}
<a href="@Url.Action("ResetFlow","Account")" class="link-back">Back</a>

<h1 class="heading-xlarge">@ViewBag.Title</h1>
<p class="lede">We've sent a reset code to <b>@Model.Data.Email</b>.</p>
<form method="POST" action="@Url.Content("~/identity/employer/resetpassword")" novalidate  autocomplete="off">
    @Html.AntiForgeryToken()
    <fieldset>
        <legend class="visually-hidden">Enter your 6 character code to reset your password</legend>
        
        <input type="hidden" value="@Model.Data.Email" name="Email"/>
        
        <div class="form-group @(!string.IsNullOrEmpty(Model.Data.PasswordResetCodeError) ? "error" : "") ">
            <label for="PasswordResetCode">
                <span class="form-label-bold">Enter code</span>
                @if (!string.IsNullOrEmpty(Model.Data.PasswordResetCodeError))
                {
                    <span class="error-message" id="error-code">@Model.Data.PasswordResetCodeError</span>
                }
            </label>
            <input class="form-control" id="PasswordResetCode" name="PasswordResetCode" value="@Model.Data.PasswordResetCode"
                   aria-required="true" @(!string.IsNullOrEmpty(Model.Data.PasswordResetCodeError) ? "aria-invalid=true aria-describedby=error-code" : "" ) >
        </div>
        <div class="form-group @(!string.IsNullOrEmpty(Model.Data.PasswordError) ? "error" : "") ">
            <label for="Password">
                <span class="form-label-bold">Create new password</span>
                <span class="form-hint">Password requires upper and lowercase letters, a number and at least 8 characters</span>
                @if (!string.IsNullOrEmpty(Model.Data.PasswordError))
                {
                    <span class="error-message" id="error-password">@Model.Data.PasswordError</span>
                }
            </label>
            <input class="form-control" id="Password" type="password" name="Password"
                aria-required="true" @(!string.IsNullOrEmpty(Model.Data.PasswordError) ? "aria-invalid=true aria-describedby=error-password" : "" ) >
        </div>
        <div class="form-group @(!string.IsNullOrEmpty(Model.Data.ConfirmPasswordError) ? "error" : "") ">
            <label for="ConfirmPassword">
                <span class="form-label-bold">Confirm password</span>
                @if (!string.IsNullOrEmpty(Model.Data.ConfirmPasswordError))
                {
                    <span class="error-message" id="error-confirm">@Model.Data.ConfirmPasswordError</span>
                }
            </label>
            <input class="form-control" id="ConfirmPassword" type="password" name="ConfirmPassword"
                   aria-required="true" @(!string.IsNullOrEmpty(Model.Data.ConfirmPasswordError) ? "aria-invalid=true aria-describedby=error-confirm" : "" ) >
        </div>
    </fieldset>
    <button type="submit" class="button">Continue</button>
</form>
@section scripts {
    @Scripts.Render("~/bundles/password")
}