@using SFA.DAS.EmployerUsers.Web.Helpers
@model SFA.DAS.EmployerUsers.Web.Models.OrchestratorResponse<SFA.DAS.EmployerUsers.Web.Models.ChangePasswordViewModel>
@{
    ViewBag.PageID = "page-change-password";
    ViewBag.Title = "Change your password";
    ViewBag.HideSigninLink = true;
    ViewBag.HideCookieMessage = true;
}

@if (!Model.Data.Valid)
{
    <div class="error-summary" role="group" tabindex="-1">
        <h1 class="heading-medium error-summary-heading" id="error-summary-heading"> Errors to fix </h1>
        <p>Check the following details:</p>
        <ul class="error-summary-list">
            @if (!string.IsNullOrEmpty(Model.Data.GeneralError))
            {
                <li>@Model.Data.GeneralError</li>
            }
            @if (!string.IsNullOrEmpty(Model.Data.CurrentPasswordError))
            {
                <li>
                    <a class="fake-link" href="#@(nameof(Model.Data.CurrentPassword))">@Model.Data.CurrentPasswordError</a>
                </li>
            }
            @if (!string.IsNullOrEmpty(Model.Data.NewPasswordError))
            {
                <li>
                    <a class="fake-link" href="#@(nameof(Model.Data.NewPassword))">@Model.Data.NewPasswordError</a>
                </li>
            }
            @if (!string.IsNullOrEmpty(Model.Data.ConfirmPasswordError))
            {
                <li>
                    <a class="fake-link" href="#@(nameof(Model.Data.ConfirmPassword))">@Model.Data.ConfirmPasswordError</a>
                </li>
            }
        </ul>
    </div>
}

<h1 class="heading-xlarge">@ViewBag.Title</h1>
<form method="post" autocomplete="off">
    @Html.AntiForgeryToken()
    <fieldset>
        <legend class="visuallyhidden">New password</legend>
        <div class="form-group @(!string.IsNullOrEmpty(Model.Data.CurrentPasswordError) ? "error" : "") ">
            <label class="form-label-bold" for="CurrentPassword">
                <span class="form-label-bold">Current password</span>
                <span class="error-message" id="error-current-password">@Model.Data.CurrentPasswordError</span>
            </label>
            <input type="password" autocomplete="off" autofocus="autofocus" aria-required="true" class="form-control" id="CurrentPassword" name="CurrentPassword"
                   @(!string.IsNullOrEmpty(Model.Data.CurrentPasswordError) ? "aria-invalid=true aria-describedby=error-current-password" : "" )>
        </div>
        <div class="form-group @(!string.IsNullOrEmpty(Model.Data.NewPasswordError) ? "error" : "") ">
            <label class="form-label-bold" for="NewPassword">
                <span class="form-label-bold">Create new password</span>
                <span class="form-hint">Password requires upper and lowercase letters, a number and at least 8 characters</span>
                <span class="error-message" id="error-new-password">@Model.Data.NewPasswordError</span>
            </label>
            <input type="password" aria-required="true" class="form-control" id="NewPassword" name="NewPassword"
                   @(!string.IsNullOrEmpty(Model.Data.NewPasswordError) ? "aria-invalid=true aria-describedby=error-new-password" : "" )>
        </div>
        <div class="form-group @(!string.IsNullOrEmpty(Model.Data.ConfirmPasswordError) ? "error" : "") ">
            <label class="form-label-bold" for="ConfirmPassword">
                <span class="form-label-bold">Re-type password</span>
                <span class="error-message" id="error-confirm-password">@Model.Data.ConfirmPasswordError</span>
            </label>
            <input type="password" aria-required="true" class="form-control" id="ConfirmPassword" name="ConfirmPassword"
                   @(!string.IsNullOrEmpty(Model.Data.ConfirmPasswordError) ? "aria-invalid=true aria-describedby=error-confirm-password" : "" )>
        </div>
    </fieldset>
    <button type="submit" class="button">Continue</button>
</form>

@section scripts {
    @Scripts.Render("~/bundles/password")
}

@section breadcrumb {
    <div class="breadcrumbs">
        <ol role="navigation">
            <li><a href="@Model.Data.ReturnUrl" class="back-link">Back</a></li>
        </ol>
    </div>
}

@Html.SetZenDeskLabels(ZenDeskLabels.ChangeYourPassword)